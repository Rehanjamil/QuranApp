kotlin version: 2.1.0
error message: java.lang.NoSuchMethodError: 'java.lang.String org.jetbrains.kotlin.codegen.state.KotlinTypeMapper.mapFunctionName(org.jetbrains.kotlin.descriptors.FunctionDescriptor)'
	at com.google.devtools.ksp.processing.impl.ResolverImpl.getJvmName(ResolverImpl.kt:895)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement$jvmName$2.invoke(KspSyntheticPropertyMethodElement.kt:73)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement$jvmName$2.invoke(KspSyntheticPropertyMethodElement.kt:72)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:83)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement.getJvmName(KspSyntheticPropertyMethodElement.kt:72)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation$typesByName$2.invoke(KspAnnotation.kt:96)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation$typesByName$2.invoke(KspAnnotation.kt:71)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:83)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation.getTypesByName(KspAnnotation.kt:71)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation.wrap(KspAnnotation.kt:58)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation.access$wrap(KspAnnotation.kt:29)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2.invoke(KspAnnotation.kt:52)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2.invoke(KspAnnotation.kt:52)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:83)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspAnnotation.getAnnotationValues(KspAnnotation.kt:52)
	at dagger.internal.codegen.xprocessing.XAnnotations.toStableString(XAnnotations.java:108)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at dagger.hilt.android.processor.internal.androidentrypoint.AndroidEntryPointMetadata.of(AndroidEntryPointMetadata.java:225)
	at dagger.hilt.android.processor.internal.androidentrypoint.AndroidEntryPointMetadata.of(AndroidEntryPointMetadata.java:188)
	at dagger.hilt.android.processor.internal.androidentrypoint.AndroidEntryPointProcessingStep.processEach(AndroidEntryPointProcessingStep.java:53)
	at dagger.hilt.processor.internal.BaseProcessingStep.process(BaseProcessingStep.java:118)
	at dagger.hilt.android.processor.internal.androidentrypoint.AndroidEntryPointProcessingStep.process(AndroidEntryPointProcessingStep.java:35)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.CommonProcessorDelegate.processRound(XBasicAnnotationProcessor.kt:134)
	at dagger.spi.internal.shaded.androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor.process(KspBasicAnnotationProcessor.kt:62)
	at com.google.devtools.ksp.AbstractKotlinSymbolProcessingExtension$doAnalysis$8$1.invoke(KotlinSymbolProcessingExtension.kt:320)
	at com.google.devtools.ksp.AbstractKotlinSymbolProcessingExtension$doAnalysis$8$1.invoke(KotlinSymbolProcessingExtension.kt:318)
	at com.google.devtools.ksp.AbstractKotlinSymbolProcessingExtension.handleException(KotlinSymbolProcessingExtension.kt:430)
	at com.google.devtools.ksp.AbstractKotlinSymbolProcessingExtension.doAnalysis(KotlinSymbolProcessingExtension.kt:318)
	at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.kt:112)
	at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(TopDownAnalyzerFacadeForJVM.kt:75)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze$lambda$9(KotlinToJVMBytecodeCompiler.kt:356)
	at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.kt:112)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.kt:347)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runFrontendAndGenerateIrUsingClassicFrontend(KotlinToJVMBytecodeCompiler.kt:177)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinToJVMBytecodeCompiler.kt:102)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:169)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1554)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


